
openapi: 3.0.0
info:
  title: Bookstore API
  description: REST API for a simple bookstore app with JWT auth and file-based persistence
  version: 1.0.0

servers:
  - url: http://localhost:3000

paths:
  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Bad request

  /auth/login:
    post:
      summary: Log in and receive a JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: JWT token returned
        '401':
          description: Unauthorized

  /books:
    get:
      summary: Get all books (with optional pagination)
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: A list of books

    post:
      summary: Add a new book (requires authentication)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                author:
                  type: string
                genre:
                  type: string
                publishedYear:
                  type: integer
      responses:
        '201':
          description: Book created

  /books/search:
    get:
      summary: Search books by genre
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: genre
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Filtered book list

  /books/{id}:
    get:
      summary: Get a book by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Book found
        '404':
          description: Book not found

    put:
      summary: Update a book by ID (must be owner)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Book updated

    delete:
      summary: Delete a book by ID (must be owner)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Book deleted

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
